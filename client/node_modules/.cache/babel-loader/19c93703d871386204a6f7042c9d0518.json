{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cheerio = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar Static = tslib_1.__importStar(require(\"./static\"));\n\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\n\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\n\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\n\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\n\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\n/*\n * The API\n */\n\n\nvar api = [Attributes, Traversing, Manipulation, Css, Forms];\n\nvar Cheerio =\n/** @class */\nfunction () {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use $.load instead.\n   *\n   * @private\n   * @param selector - The new selection.\n   * @param context - Context of the selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  function Cheerio(selector, context, root, options) {\n    var _this = this;\n\n    if (!(this instanceof Cheerio)) {\n      return new Cheerio(selector, context, root, options);\n    }\n\n    this.length = 0;\n    this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), this.options), options_1.flatten(options)); // $(), $(null), $(undefined), $(false)\n\n    if (!selector) return this;\n\n    if (root) {\n      if (typeof root === 'string') root = parse_1.default(root, this.options, false);\n      this._root = Cheerio.call(this, root);\n    } // $($)\n\n\n    if (utils_1.isCheerio(selector)) return selector;\n    var elements = typeof selector === 'string' && utils_1.isHtml(selector) ? // $(<html>)\n    parse_1.default(selector, this.options, false).children : isNode(selector) ? // $(dom)\n    [selector] : Array.isArray(selector) ? // $([dom])\n    selector : null;\n\n    if (elements) {\n      elements.forEach(function (elem, idx) {\n        _this[idx] = elem;\n      });\n      this.length = elements.length;\n      return this;\n    } // We know that our selector is a string now.\n\n\n    var search = selector;\n    var searchContext = !context ? // If we don't have a context, maybe we have a root, from loading\n    this._root : typeof context === 'string' ? utils_1.isHtml(context) ? // $('li', '<ul>...</ul>')\n    new Cheerio(parse_1.default(context, this.options, false)) : ( // $('li', 'ul')\n    search = context + \" \" + search, this._root) : utils_1.isCheerio(context) ? // $('li', $)\n    context : // $('li', node), $('li', [nodes])\n    new Cheerio(context); // If we still don't have a context, return\n\n    if (!searchContext) return this;\n    /*\n     * #id, .class, tag\n     */\n    // @ts-expect-error No good way to type this â€” we will always return `Cheerio<Element>` here.\n\n    return searchContext.find(search);\n  }\n  /**\n   * Make a cheerio object.\n   *\n   * @private\n   * @param dom - The contents of the new object.\n   * @param context - The context of the new object.\n   * @returns The new cheerio object.\n   */\n\n\n  Cheerio.prototype._make = function (dom, context, root) {\n    if (root === void 0) {\n      root = this._root;\n    }\n\n    var cheerio = new this.constructor(dom, context, root, this.options);\n    cheerio.prevObject = this;\n    return cheerio;\n  };\n  /**\n   * Retrieve all the DOM elements contained in the jQuery set as an array.\n   *\n   * @example\n   *\n   * ```js\n   * $('li').toArray();\n   * //=> [ {...}, {...}, {...} ]\n   * ```\n   *\n   * @returns The contained items.\n   */\n\n\n  Cheerio.prototype.toArray = function () {\n    return this.get();\n  };\n\n  Cheerio.html = Static.html;\n  Cheerio.xml = Static.xml;\n  Cheerio.text = Static.text;\n  Cheerio.parseHTML = Static.parseHTML;\n  Cheerio.root = Static.root;\n  Cheerio.contains = Static.contains;\n  Cheerio.merge = Static.merge;\n  /** Mimic jQuery's prototype alias for plugin authors. */\n\n  Cheerio.fn = Cheerio.prototype;\n  return Cheerio;\n}();\n\nexports.Cheerio = Cheerio;\n/** Set a signature of the object. */\n\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\n\nCheerio.prototype.splice = Array.prototype.splice; // Support for (const element of $(...)) iteration:\n\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator]; // Plug in the API\n\napi.forEach(function (mod) {\n  return Object.assign(Cheerio.prototype, mod);\n});\n\nfunction isNode(obj) {\n  return !!obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';\n} // Make it possible to call Cheerio without using `new`.\n\n\nexports.default = Cheerio;","map":{"version":3,"sources":["/Users/ph/sites/retro-gamer/node_modules/cheerio/lib/cheerio.js"],"names":["Object","defineProperty","exports","value","Cheerio","tslib_1","require","parse_1","__importDefault","options_1","__importStar","utils_1","Static","Attributes","Traversing","Manipulation","Css","Forms","api","selector","context","root","options","_this","length","__assign","default","flatten","_root","call","isCheerio","elements","isHtml","children","isNode","Array","isArray","forEach","elem","idx","search","searchContext","find","prototype","_make","dom","cheerio","constructor","prevObject","toArray","get","html","xml","text","parseHTML","contains","merge","fn","splice","Symbol","iterator","mod","assign","obj","name","type"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cheerio = void 0;\nvar tslib_1 = require(\"tslib\");\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\nvar utils_1 = require(\"./utils\");\nvar Static = tslib_1.__importStar(require(\"./static\"));\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\n/*\n * The API\n */\nvar api = [Attributes, Traversing, Manipulation, Css, Forms];\nvar Cheerio = /** @class */ (function () {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use $.load instead.\n     *\n     * @private\n     * @param selector - The new selection.\n     * @param context - Context of the selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    function Cheerio(selector, context, root, options) {\n        var _this = this;\n        if (!(this instanceof Cheerio)) {\n            return new Cheerio(selector, context, root, options);\n        }\n        this.length = 0;\n        this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), this.options), options_1.flatten(options));\n        // $(), $(null), $(undefined), $(false)\n        if (!selector)\n            return this;\n        if (root) {\n            if (typeof root === 'string')\n                root = parse_1.default(root, this.options, false);\n            this._root = Cheerio.call(this, root);\n        }\n        // $($)\n        if (utils_1.isCheerio(selector))\n            return selector;\n        var elements = typeof selector === 'string' && utils_1.isHtml(selector)\n            ? // $(<html>)\n                parse_1.default(selector, this.options, false).children\n            : isNode(selector)\n                ? // $(dom)\n                    [selector]\n                : Array.isArray(selector)\n                    ? // $([dom])\n                        selector\n                    : null;\n        if (elements) {\n            elements.forEach(function (elem, idx) {\n                _this[idx] = elem;\n            });\n            this.length = elements.length;\n            return this;\n        }\n        // We know that our selector is a string now.\n        var search = selector;\n        var searchContext = !context\n            ? // If we don't have a context, maybe we have a root, from loading\n                this._root\n            : typeof context === 'string'\n                ? utils_1.isHtml(context)\n                    ? // $('li', '<ul>...</ul>')\n                        new Cheerio(parse_1.default(context, this.options, false))\n                    : // $('li', 'ul')\n                        ((search = context + \" \" + search), this._root)\n                : utils_1.isCheerio(context)\n                    ? // $('li', $)\n                        context\n                    : // $('li', node), $('li', [nodes])\n                        new Cheerio(context);\n        // If we still don't have a context, return\n        if (!searchContext)\n            return this;\n        /*\n         * #id, .class, tag\n         */\n        // @ts-expect-error No good way to type this â€” we will always return `Cheerio<Element>` here.\n        return searchContext.find(search);\n    }\n    /**\n     * Make a cheerio object.\n     *\n     * @private\n     * @param dom - The contents of the new object.\n     * @param context - The context of the new object.\n     * @returns The new cheerio object.\n     */\n    Cheerio.prototype._make = function (dom, context, root) {\n        if (root === void 0) { root = this._root; }\n        var cheerio = new this.constructor(dom, context, root, this.options);\n        cheerio.prevObject = this;\n        return cheerio;\n    };\n    /**\n     * Retrieve all the DOM elements contained in the jQuery set as an array.\n     *\n     * @example\n     *\n     * ```js\n     * $('li').toArray();\n     * //=> [ {...}, {...}, {...} ]\n     * ```\n     *\n     * @returns The contained items.\n     */\n    Cheerio.prototype.toArray = function () {\n        return this.get();\n    };\n    Cheerio.html = Static.html;\n    Cheerio.xml = Static.xml;\n    Cheerio.text = Static.text;\n    Cheerio.parseHTML = Static.parseHTML;\n    Cheerio.root = Static.root;\n    Cheerio.contains = Static.contains;\n    Cheerio.merge = Static.merge;\n    /** Mimic jQuery's prototype alias for plugin authors. */\n    Cheerio.fn = Cheerio.prototype;\n    return Cheerio;\n}());\nexports.Cheerio = Cheerio;\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\napi.forEach(function (mod) { return Object.assign(Cheerio.prototype, mod); });\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n// Make it possible to call Cheerio without using `new`.\nexports.default = Cheerio;\n"]},"metadata":{},"sourceType":"script"}