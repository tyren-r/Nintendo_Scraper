{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.load = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\n\nvar staticMethods = tslib_1.__importStar(require(\"./static\"));\n\nvar cheerio_1 = require(\"./cheerio\");\n\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n/**\n * Create a querying function, bound to a document created from the provided\n * markup. Note that similar to web browser contexts, this operation may\n * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to\n * `false` to switch to fragment mode and disable this.\n *\n * See the README section titled \"Loading\" for additional usage information.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n */\n\n\nfunction load(content, options, isDocument) {\n  if (content == null) {\n    throw new Error('cheerio.load() expects a string');\n  }\n\n  options = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));\n  if (typeof isDocument === 'undefined') isDocument = true;\n  var root = parse_1.default(content, options, isDocument);\n\n  var initialize =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(initialize, _super);\n\n    function initialize(selector, context, r, opts) {\n      if (r === void 0) {\n        r = root;\n      }\n\n      var _this = this; // @ts-expect-error Using `this` before calling the constructor.\n\n\n      if (!(_this instanceof initialize)) {\n        return new initialize(selector, context, r, opts);\n      }\n\n      _this = _super.call(this, selector, context, r, tslib_1.__assign(tslib_1.__assign({}, options), opts)) || this;\n      return _this;\n    } // Mimic jQuery's prototype alias for plugin authors.\n\n\n    initialize.fn = initialize.prototype;\n    return initialize;\n  }(cheerio_1.Cheerio);\n  /*\n   * Keep a reference to the top-level scope so we can chain methods that implicitly\n   * resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n   */\n\n\n  initialize.prototype._originalRoot = root; // Add in the static methods\n\n  Object.assign(initialize, staticMethods, {\n    load: load\n  }); // Add in the root\n\n  initialize._root = root; // Store options\n\n  initialize._options = options;\n  return initialize;\n}\n\nexports.load = load;","map":{"version":3,"sources":["/Users/ph/sites/retro-gamer/node_modules/cheerio/lib/load.js"],"names":["Object","defineProperty","exports","value","load","tslib_1","require","options_1","__importStar","staticMethods","cheerio_1","parse_1","__importDefault","content","options","isDocument","Error","__assign","default","flatten","root","initialize","_super","__extends","selector","context","r","opts","_this","call","fn","prototype","Cheerio","_originalRoot","assign","_root","_options"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,WAAD,CAA5B,CAAhB;;AACA,IAAIG,aAAa,GAAGJ,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,UAAD,CAA5B,CAApB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIK,OAAO,GAAGN,OAAO,CAACO,eAAR,CAAwBN,OAAO,CAAC,SAAD,CAA/B,CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,IAAT,CAAcS,OAAd,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4C;AACxC,MAAIF,OAAO,IAAI,IAAf,EAAqB;AACjB,UAAM,IAAIG,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACDF,EAAAA,OAAO,GAAGT,OAAO,CAACY,QAAR,CAAiBZ,OAAO,CAACY,QAAR,CAAiB,EAAjB,EAAqBV,SAAS,CAACW,OAA/B,CAAjB,EAA0DX,SAAS,CAACY,OAAV,CAAkBL,OAAlB,CAA1D,CAAV;AACA,MAAI,OAAOC,UAAP,KAAsB,WAA1B,EACIA,UAAU,GAAG,IAAb;AACJ,MAAIK,IAAI,GAAGT,OAAO,CAACO,OAAR,CAAgBL,OAAhB,EAAyBC,OAAzB,EAAkCC,UAAlC,CAAX;;AACA,MAAIM,UAAU;AAAG;AAAe,YAAUC,MAAV,EAAkB;AAC9CjB,IAAAA,OAAO,CAACkB,SAAR,CAAkBF,UAAlB,EAA8BC,MAA9B;;AACA,aAASD,UAAT,CAAoBG,QAApB,EAA8BC,OAA9B,EAAuCC,CAAvC,EAA0CC,IAA1C,EAAgD;AAC5C,UAAID,CAAC,KAAK,KAAK,CAAf,EAAkB;AAAEA,QAAAA,CAAC,GAAGN,IAAJ;AAAW;;AAC/B,UAAIQ,KAAK,GAAG,IAAZ,CAF4C,CAG5C;;;AACA,UAAI,EAAEA,KAAK,YAAYP,UAAnB,CAAJ,EAAoC;AAChC,eAAO,IAAIA,UAAJ,CAAeG,QAAf,EAAyBC,OAAzB,EAAkCC,CAAlC,EAAqCC,IAArC,CAAP;AACH;;AACDC,MAAAA,KAAK,GAAGN,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkBL,QAAlB,EAA4BC,OAA5B,EAAqCC,CAArC,EAAwCrB,OAAO,CAACY,QAAR,CAAiBZ,OAAO,CAACY,QAAR,CAAiB,EAAjB,EAAqBH,OAArB,CAAjB,EAAgDa,IAAhD,CAAxC,KAAkG,IAA1G;AACA,aAAOC,KAAP;AACH,KAX6C,CAY9C;;;AACAP,IAAAA,UAAU,CAACS,EAAX,GAAgBT,UAAU,CAACU,SAA3B;AACA,WAAOV,UAAP;AACH,GAf+B,CAe9BX,SAAS,CAACsB,OAfoB,CAAhC;AAgBA;AACJ;AACA;AACA;;;AACIX,EAAAA,UAAU,CAACU,SAAX,CAAqBE,aAArB,GAAqCb,IAArC,CA5BwC,CA6BxC;;AACApB,EAAAA,MAAM,CAACkC,MAAP,CAAcb,UAAd,EAA0BZ,aAA1B,EAAyC;AAAEL,IAAAA,IAAI,EAAEA;AAAR,GAAzC,EA9BwC,CA+BxC;;AACAiB,EAAAA,UAAU,CAACc,KAAX,GAAmBf,IAAnB,CAhCwC,CAiCxC;;AACAC,EAAAA,UAAU,CAACe,QAAX,GAAsBtB,OAAtB;AACA,SAAOO,UAAP;AACH;;AACDnB,OAAO,CAACE,IAAR,GAAeA,IAAf","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\nvar tslib_1 = require(\"tslib\");\nvar options_1 = tslib_1.__importStar(require(\"./options\"));\nvar staticMethods = tslib_1.__importStar(require(\"./static\"));\nvar cheerio_1 = require(\"./cheerio\");\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n/**\n * Create a querying function, bound to a document created from the provided\n * markup. Note that similar to web browser contexts, this operation may\n * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to\n * `false` to switch to fragment mode and disable this.\n *\n * See the README section titled \"Loading\" for additional usage information.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n */\nfunction load(content, options, isDocument) {\n    if (content == null) {\n        throw new Error('cheerio.load() expects a string');\n    }\n    options = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));\n    if (typeof isDocument === 'undefined')\n        isDocument = true;\n    var root = parse_1.default(content, options, isDocument);\n    var initialize = /** @class */ (function (_super) {\n        tslib_1.__extends(initialize, _super);\n        function initialize(selector, context, r, opts) {\n            if (r === void 0) { r = root; }\n            var _this = this;\n            // @ts-expect-error Using `this` before calling the constructor.\n            if (!(_this instanceof initialize)) {\n                return new initialize(selector, context, r, opts);\n            }\n            _this = _super.call(this, selector, context, r, tslib_1.__assign(tslib_1.__assign({}, options), opts)) || this;\n            return _this;\n        }\n        // Mimic jQuery's prototype alias for plugin authors.\n        initialize.fn = initialize.prototype;\n        return initialize;\n    }(cheerio_1.Cheerio));\n    /*\n     * Keep a reference to the top-level scope so we can chain methods that implicitly\n     * resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n     */\n    initialize.prototype._originalRoot = root;\n    // Add in the static methods\n    Object.assign(initialize, staticMethods, { load: load });\n    // Add in the root\n    initialize._root = root;\n    // Store options\n    initialize._options = options;\n    return initialize;\n}\nexports.load = load;\n"]},"metadata":{},"sourceType":"script"}