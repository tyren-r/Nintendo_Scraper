{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.css = void 0;\n\nvar utils_1 = require(\"../utils\");\n\nfunction css(prop, val) {\n  if (prop != null && val != null || // When `prop` is a \"plain\" object\n  typeof prop === 'object' && !Array.isArray(prop)) {\n    return utils_1.domEach(this, function (idx, el) {\n      if (utils_1.isTag(el)) {\n        // `prop` can't be an array here anymore.\n        setCss(el, prop, val, idx);\n      }\n    });\n  }\n\n  return getCss(this[0], prop);\n}\n\nexports.css = css;\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\n\nfunction setCss(el, prop, value, idx) {\n  if (typeof prop === 'string') {\n    var styles = getCss(el);\n    var val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n\n    if (val === '') {\n      delete styles[prop];\n    } else if (val != null) {\n      styles[prop] = val;\n    }\n\n    el.attribs.style = stringify(styles);\n  } else if (typeof prop === 'object') {\n    Object.keys(prop).forEach(function (k, i) {\n      setCss(el, k, prop[k], i);\n    });\n  }\n}\n\nfunction getCss(el, prop) {\n  if (!el || !utils_1.isTag(el)) return;\n  var styles = parse(el.attribs.style);\n\n  if (typeof prop === 'string') {\n    return styles[prop];\n  }\n\n  if (Array.isArray(prop)) {\n    var newStyles_1 = {};\n    prop.forEach(function (item) {\n      if (styles[item] != null) {\n        newStyles_1[item] = styles[item];\n      }\n    });\n    return newStyles_1;\n  }\n\n  return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\n\n\nfunction stringify(obj) {\n  return Object.keys(obj).reduce(function (str, prop) {\n    return \"\" + str + (str ? ' ' : '') + prop + \": \" + obj[prop] + \";\";\n  }, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\n\n\nfunction parse(styles) {\n  styles = (styles || '').trim();\n  if (!styles) return {};\n  return styles.split(';').reduce(function (obj, str) {\n    var n = str.indexOf(':'); // Skip if there is no :, or if it is the first/last character\n\n    if (n < 1 || n === str.length - 1) return obj;\n    obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();\n    return obj;\n  }, {});\n}","map":{"version":3,"sources":["/Users/ph/sites/retro-gamer/node_modules/cheerio/lib/api/css.js"],"names":["Object","defineProperty","exports","value","css","utils_1","require","prop","val","Array","isArray","domEach","idx","el","isTag","setCss","getCss","styles","call","attribs","style","stringify","keys","forEach","k","i","parse","newStyles_1","item","obj","reduce","str","trim","split","n","indexOf","length","slice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.css = void 0;\nvar utils_1 = require(\"../utils\");\nfunction css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return utils_1.domEach(this, function (idx, el) {\n            if (utils_1.isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, idx);\n            }\n        });\n    }\n    return getCss(this[0], prop);\n}\nexports.css = css;\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        var styles = getCss(el);\n        var val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs.style = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        Object.keys(prop).forEach(function (k, i) {\n            setCss(el, k, prop[k], i);\n        });\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !utils_1.isTag(el))\n        return;\n    var styles = parse(el.attribs.style);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        var newStyles_1 = {};\n        prop.forEach(function (item) {\n            if (styles[item] != null) {\n                newStyles_1[item] = styles[item];\n            }\n        });\n        return newStyles_1;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce(function (str, prop) { return \"\" + str + (str ? ' ' : '') + prop + \": \" + obj[prop] + \";\"; }, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    return styles.split(';').reduce(function (obj, str) {\n        var n = str.indexOf(':');\n        // Skip if there is no :, or if it is the first/last character\n        if (n < 1 || n === str.length - 1)\n            return obj;\n        obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();\n        return obj;\n    }, {});\n}\n"]},"metadata":{},"sourceType":"script"}