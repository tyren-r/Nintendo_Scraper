{"ast":null,"code":"\"use strict\";\n/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addBack = exports.add = exports.end = exports.slice = exports.index = exports.get = exports.eq = exports.last = exports.first = exports.has = exports.not = exports.filter = exports.map = exports.each = exports.contents = exports.children = exports.siblings = exports.prevUntil = exports.prevAll = exports.prev = exports.nextUntil = exports.nextAll = exports.next = exports.closest = exports.parentsUntil = exports.parents = exports.parent = exports.find = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar domhandler_1 = require(\"domhandler\");\n\nvar select = tslib_1.__importStar(require(\"cheerio-select\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar htmlparser2_1 = require(\"htmlparser2\");\n\nvar uniqueSort = htmlparser2_1.DomUtils.uniqueSort;\nvar reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\n\nfunction find(selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  var context = this.toArray();\n\n  if (typeof selectorOrHaystack !== 'string') {\n    var contains_1 = this.constructor.contains;\n    var haystack = utils_1.isCheerio(selectorOrHaystack) ? selectorOrHaystack.get() : [selectorOrHaystack];\n    return this._make(haystack.filter(function (elem) {\n      return context.some(function (node) {\n        return contains_1(node, elem);\n      });\n    }));\n  }\n\n  var elems = reSiblingSelector.test(selectorOrHaystack) ? context : context.reduce(function (newElems, elem) {\n    return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children.filter(utils_1.isTag)) : newElems;\n  }, []);\n  var options = {\n    context: context,\n    xmlMode: this.options.xmlMode\n  };\n  return this._make(select.select(selectorOrHaystack, elems, options));\n}\n\nexports.find = find;\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\n\nfunction parent(selector) {\n  var set = [];\n  utils_1.domEach(this, function (_, elem) {\n    var parentElem = elem.parent;\n\n    if (parentElem && parentElem.type !== 'root' && !set.includes(parentElem)) {\n      set.push(parentElem);\n    }\n  });\n  return selector ? filter.call(set, selector, this) : this._make(set);\n}\n\nexports.parent = parent;\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\n\nfunction parents(selector) {\n  var _this = this;\n\n  var parentNodes = [];\n  /*\n   * When multiple DOM elements are in the original set, the resulting set will\n   * be in *reverse* order of the original elements as well, with duplicates\n   * removed.\n   */\n\n  this.get().reverse().forEach(function (elem) {\n    return traverseParents(_this, elem.parent, selector, Infinity).forEach(function (node) {\n      // We know these must be `Element`s, as we filter out root nodes.\n      if (!parentNodes.includes(node)) {\n        parentNodes.push(node);\n      }\n    });\n  });\n  return this._make(parentNodes);\n}\n\nexports.parents = parents;\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterBy - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\n\nfunction parentsUntil(selector, filterBy) {\n  var parentNodes = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.parents(selector).toArray();\n  } else if (selector && utils_1.isCheerio(selector)) {\n    untilNodes = selector.toArray();\n  } else if (selector) {\n    untilNode = selector;\n  }\n  /*\n   * When multiple DOM elements are in the original set, the resulting set will\n   * be in *reverse* order of the original elements as well, with duplicates\n   * removed.\n   */\n\n\n  this.toArray().reverse().forEach(function (elem) {\n    while (elem.parent) {\n      elem = elem.parent;\n\n      if (untilNode && elem !== untilNode || untilNodes && !untilNodes.includes(elem) || !untilNode && !untilNodes) {\n        if (utils_1.isTag(elem) && !parentNodes.includes(elem)) {\n          parentNodes.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  }, this);\n  return filterBy ? filter.call(parentNodes, filterBy, this) : this._make(parentNodes);\n}\n\nexports.parentsUntil = parentsUntil;\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\n\nfunction closest(selector) {\n  var _this = this;\n\n  var set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  utils_1.domEach(this, function (_, elem) {\n    var closestElem = traverseParents(_this, elem, selector, 1)[0]; // Do not add duplicate elements to the set\n\n    if (closestElem && !set.includes(closestElem)) {\n      set.push(closestElem);\n    }\n  });\n  return this._make(set);\n}\n\nexports.closest = closest;\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\n\nfunction next(selector) {\n  var elems = [];\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.next) {\n      elem = elem.next;\n\n      if (utils_1.isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.next = next;\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\n\nfunction nextAll(selector) {\n  var elems = [];\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.next) {\n      elem = elem.next;\n\n      if (utils_1.isTag(elem) && !elems.includes(elem)) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.nextAll = nextAll;\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\n\nfunction nextUntil(selector, filterSelector) {\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.nextAll(selector).toArray();\n  } else if (selector && utils_1.isCheerio(selector)) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.next) {\n      elem = elem.next;\n\n      if (untilNode && elem !== untilNode || untilNodes && !untilNodes.includes(elem) || !untilNode && !untilNodes) {\n        if (utils_1.isTag(elem) && !elems.includes(elem)) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? filter.call(elems, filterSelector, this) : this._make(elems);\n}\n\nexports.nextUntil = nextUntil;\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\n\nfunction prev(selector) {\n  var elems = [];\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.prev) {\n      elem = elem.prev;\n\n      if (utils_1.isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.prev = prev;\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\n\nfunction prevAll(selector) {\n  var elems = [];\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.prev) {\n      elem = elem.prev;\n\n      if (utils_1.isTag(elem) && !elems.includes(elem)) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.prevAll = prevAll;\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\n\nfunction prevUntil(selector, filterSelector) {\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.prevAll(selector).toArray();\n  } else if (selector && utils_1.isCheerio(selector)) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  utils_1.domEach(this, function (_, elem) {\n    while (elem.prev) {\n      elem = elem.prev;\n\n      if (untilNode && elem !== untilNode || untilNodes && !untilNodes.includes(elem) || !untilNode && !untilNodes) {\n        if (utils_1.isTag(elem) && !elems.includes(elem)) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? filter.call(elems, filterSelector, this) : this._make(elems);\n}\n\nexports.prevUntil = prevUntil;\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\n\nfunction siblings(selector) {\n  var _this = this; // TODO Still get siblings if `parent` is null; see DomUtils' `getSiblings`.\n\n\n  var parent = this.parent();\n  var elems = parent.children().toArray() // TODO: This removes all elements in the selection. Note that they could be added here, if siblings are part of the selection.\n  .filter(function (elem) {\n    return !_this.is(elem);\n  });\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.siblings = siblings;\n/**\n * Gets the children of the first selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\n\nfunction children(selector) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children.filter(utils_1.isTag)) : newElems;\n  }, []);\n  return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\n\nexports.children = children;\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\n\nfunction contents() {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children) : newElems;\n  }, []);\n  return this._make(elems);\n}\n\nexports.contents = contents;\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\n\nfunction each(fn) {\n  var i = 0;\n  var len = this.length;\n\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n\n  return this;\n}\n\nexports.each = each;\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\n\nfunction map(fn) {\n  var elems = [];\n\n  for (var i = 0; i < this.length; i++) {\n    var el = this[i];\n    var val = fn.call(el, i, el);\n\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n\n  return this._make(elems);\n}\n\nexports.map = map;\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return function (el, i) {\n      return match.call(el, i, el);\n    };\n  }\n\n  if (utils_1.isCheerio(match)) {\n    return match.is.bind(match);\n  }\n\n  return function (el) {\n    return match === el;\n  };\n}\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that selection.\n * When an element is specified, return only that element (if it is contained in\n * the original selection). If using the function method, the function is\n * executed in the context of the selected element, so `this` refers to the\n * current element.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').filter('.orange').attr('class');\n * //=> orange\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\n\n\nfunction filter(match, container) {\n  if (container === void 0) {\n    container = this;\n  }\n\n  if (!utils_1.isCheerio(container)) {\n    throw new Error('Not able to create a Cheerio instance.');\n  }\n\n  var nodes = utils_1.isCheerio(this) ? this.toArray() : this;\n  var elements = nodes.filter(utils_1.isTag);\n  elements = typeof match === 'string' ? select.filter(match, elements, container.options) : elements.filter(getFilterFn(match));\n  return container._make(elements);\n}\n\nexports.filter = filter;\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\n\nfunction not(match, container) {\n  if (container === void 0) {\n    container = this;\n  }\n\n  if (!utils_1.isCheerio(container)) {\n    throw new Error('Not able to create a Cheerio instance.');\n  }\n\n  var nodes = utils_1.isCheerio(this) ? this.toArray() : this;\n\n  if (typeof match === 'string') {\n    var elements = nodes.filter(utils_1.isTag);\n    var matches_1 = new Set(select.filter(match, elements, container.options));\n    nodes = nodes.filter(function (el) {\n      return !matches_1.has(el);\n    });\n  } else {\n    var filterFn_1 = getFilterFn(match);\n    nodes = nodes.filter(function (el, i) {\n      return !filterFn_1(el, i);\n    });\n  }\n\n  return container._make(nodes);\n}\n\nexports.not = not;\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\n\nfunction has(selectorOrHaystack) {\n  var _this = this;\n\n  return filter.call(this, typeof selectorOrHaystack === 'string' ? // Using the `:has` selector here short-circuits searches.\n  \":has(\" + selectorOrHaystack + \")\" : function (_, el) {\n    return _this._make(el).find(selectorOrHaystack).length > 0;\n  });\n}\n\nexports.has = has;\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\n\nfunction first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n\nexports.first = first;\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\n\nfunction last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n\nexports.last = last;\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\n\nfunction eq(i) {\n  var _a;\n\n  i = +i; // Use the first identity optimization if possible\n\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\n\nexports.eq = eq;\n\nfunction get(i) {\n  if (i == null) {\n    return Array.prototype.slice.call(this);\n  }\n\n  return this[i < 0 ? this.length + i : i];\n}\n\nexports.get = get;\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\n\nfunction index(selectorOrNeedle) {\n  var $haystack;\n  var needle;\n\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = utils_1.isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return $haystack.get().indexOf(needle);\n}\n\nexports.index = index;\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - An position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - An position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\n\nfunction slice(start, end) {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n\nexports.slice = slice;\n\nfunction traverseParents(self, elem, selector, limit) {\n  var elems = [];\n\n  while (elem && elems.length < limit && elem.type !== 'root') {\n    if (!selector || filter.call([elem], selector, self).length) {\n      elems.push(elem);\n    }\n\n    elem = elem.parent;\n  }\n\n  return elems;\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\n\n\nfunction end() {\n  var _a;\n\n  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n\nexports.end = end;\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\n\nfunction add(other, context) {\n  var selection = this._make(other, context);\n\n  var contents = uniqueSort(tslib_1.__spreadArray(tslib_1.__spreadArray([], this.get()), selection.get()));\n  return this._make(contents);\n}\n\nexports.add = add;\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\n\nfunction addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}\n\nexports.addBack = addBack;","map":{"version":3,"sources":["/Users/ph/sites/retro-gamer/node_modules/cheerio/lib/api/traversing.js"],"names":["Object","defineProperty","exports","value","addBack","add","end","slice","index","get","eq","last","first","has","not","filter","map","each","contents","children","siblings","prevUntil","prevAll","prev","nextUntil","nextAll","next","closest","parentsUntil","parents","parent","find","tslib_1","require","domhandler_1","select","__importStar","utils_1","htmlparser2_1","uniqueSort","DomUtils","reSiblingSelector","selectorOrHaystack","_make","context","toArray","contains_1","constructor","contains","haystack","isCheerio","elem","some","node","elems","test","reduce","newElems","hasChildren","concat","isTag","options","xmlMode","selector","set","domEach","_","parentElem","type","includes","push","call","_this","parentNodes","reverse","forEach","traverseParents","Infinity","filterBy","untilNode","untilNodes","closestElem","filterSelector","is","fn","i","len","length","el","val","getFilterFn","match","bind","container","Error","nodes","elements","matches_1","Set","filterFn_1","_a","Array","prototype","selectorOrNeedle","$haystack","needle","indexOf","start","self","limit","prevObject","other","selection","__spreadArray"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addBack = exports.add = exports.end = exports.slice = exports.index = exports.get = exports.eq = exports.last = exports.first = exports.has = exports.not = exports.filter = exports.map = exports.each = exports.contents = exports.children = exports.siblings = exports.prevUntil = exports.prevAll = exports.prev = exports.nextUntil = exports.nextAll = exports.next = exports.closest = exports.parentsUntil = exports.parents = exports.parent = exports.find = void 0;\nvar tslib_1 = require(\"tslib\");\nvar domhandler_1 = require(\"domhandler\");\nvar select = tslib_1.__importStar(require(\"cheerio-select\"));\nvar utils_1 = require(\"../utils\");\nvar htmlparser2_1 = require(\"htmlparser2\");\nvar uniqueSort = htmlparser2_1.DomUtils.uniqueSort;\nvar reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nfunction find(selectorOrHaystack) {\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    var context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        var contains_1 = this.constructor.contains;\n        var haystack = utils_1.isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.get()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter(function (elem) { return context.some(function (node) { return contains_1(node, elem); }); }));\n    }\n    var elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : context.reduce(function (newElems, elem) {\n            return domhandler_1.hasChildren(elem)\n                ? newElems.concat(elem.children.filter(utils_1.isTag))\n                : newElems;\n        }, []);\n    var options = { context: context, xmlMode: this.options.xmlMode };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\nexports.find = find;\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nfunction parent(selector) {\n    var set = [];\n    utils_1.domEach(this, function (_, elem) {\n        var parentElem = elem.parent;\n        if (parentElem &&\n            parentElem.type !== 'root' &&\n            !set.includes(parentElem)) {\n            set.push(parentElem);\n        }\n    });\n    return selector ? filter.call(set, selector, this) : this._make(set);\n}\nexports.parent = parent;\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nfunction parents(selector) {\n    var _this = this;\n    var parentNodes = [];\n    /*\n     * When multiple DOM elements are in the original set, the resulting set will\n     * be in *reverse* order of the original elements as well, with duplicates\n     * removed.\n     */\n    this.get()\n        .reverse()\n        .forEach(function (elem) {\n        return traverseParents(_this, elem.parent, selector, Infinity).forEach(function (node) {\n            // We know these must be `Element`s, as we filter out root nodes.\n            if (!parentNodes.includes(node)) {\n                parentNodes.push(node);\n            }\n        });\n    });\n    return this._make(parentNodes);\n}\nexports.parents = parents;\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterBy - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nfunction parentsUntil(selector, filterBy) {\n    var parentNodes = [];\n    var untilNode;\n    var untilNodes;\n    if (typeof selector === 'string') {\n        untilNodes = this.parents(selector).toArray();\n    }\n    else if (selector && utils_1.isCheerio(selector)) {\n        untilNodes = selector.toArray();\n    }\n    else if (selector) {\n        untilNode = selector;\n    }\n    /*\n     * When multiple DOM elements are in the original set, the resulting set will\n     * be in *reverse* order of the original elements as well, with duplicates\n     * removed.\n     */\n    this.toArray()\n        .reverse()\n        .forEach(function (elem) {\n        while (elem.parent) {\n            elem = elem.parent;\n            if ((untilNode && elem !== untilNode) ||\n                (untilNodes && !untilNodes.includes(elem)) ||\n                (!untilNode && !untilNodes)) {\n                if (utils_1.isTag(elem) && !parentNodes.includes(elem)) {\n                    parentNodes.push(elem);\n                }\n            }\n            else {\n                break;\n            }\n        }\n    }, this);\n    return filterBy\n        ? filter.call(parentNodes, filterBy, this)\n        : this._make(parentNodes);\n}\nexports.parentsUntil = parentsUntil;\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nfunction closest(selector) {\n    var _this = this;\n    var set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    utils_1.domEach(this, function (_, elem) {\n        var closestElem = traverseParents(_this, elem, selector, 1)[0];\n        // Do not add duplicate elements to the set\n        if (closestElem && !set.includes(closestElem)) {\n            set.push(closestElem);\n        }\n    });\n    return this._make(set);\n}\nexports.closest = closest;\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nfunction next(selector) {\n    var elems = [];\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.next) {\n            elem = elem.next;\n            if (utils_1.isTag(elem)) {\n                elems.push(elem);\n                return;\n            }\n        }\n    });\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.next = next;\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nfunction nextAll(selector) {\n    var elems = [];\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.next) {\n            elem = elem.next;\n            if (utils_1.isTag(elem) && !elems.includes(elem)) {\n                elems.push(elem);\n            }\n        }\n    });\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.nextAll = nextAll;\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nfunction nextUntil(selector, filterSelector) {\n    var elems = [];\n    var untilNode;\n    var untilNodes;\n    if (typeof selector === 'string') {\n        untilNodes = this.nextAll(selector).toArray();\n    }\n    else if (selector && utils_1.isCheerio(selector)) {\n        untilNodes = selector.get();\n    }\n    else if (selector) {\n        untilNode = selector;\n    }\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.next) {\n            elem = elem.next;\n            if ((untilNode && elem !== untilNode) ||\n                (untilNodes && !untilNodes.includes(elem)) ||\n                (!untilNode && !untilNodes)) {\n                if (utils_1.isTag(elem) && !elems.includes(elem)) {\n                    elems.push(elem);\n                }\n            }\n            else {\n                break;\n            }\n        }\n    });\n    return filterSelector\n        ? filter.call(elems, filterSelector, this)\n        : this._make(elems);\n}\nexports.nextUntil = nextUntil;\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nfunction prev(selector) {\n    var elems = [];\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.prev) {\n            elem = elem.prev;\n            if (utils_1.isTag(elem)) {\n                elems.push(elem);\n                return;\n            }\n        }\n    });\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.prev = prev;\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nfunction prevAll(selector) {\n    var elems = [];\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.prev) {\n            elem = elem.prev;\n            if (utils_1.isTag(elem) && !elems.includes(elem)) {\n                elems.push(elem);\n            }\n        }\n    });\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.prevAll = prevAll;\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nfunction prevUntil(selector, filterSelector) {\n    var elems = [];\n    var untilNode;\n    var untilNodes;\n    if (typeof selector === 'string') {\n        untilNodes = this.prevAll(selector).toArray();\n    }\n    else if (selector && utils_1.isCheerio(selector)) {\n        untilNodes = selector.get();\n    }\n    else if (selector) {\n        untilNode = selector;\n    }\n    utils_1.domEach(this, function (_, elem) {\n        while (elem.prev) {\n            elem = elem.prev;\n            if ((untilNode && elem !== untilNode) ||\n                (untilNodes && !untilNodes.includes(elem)) ||\n                (!untilNode && !untilNodes)) {\n                if (utils_1.isTag(elem) && !elems.includes(elem)) {\n                    elems.push(elem);\n                }\n            }\n            else {\n                break;\n            }\n        }\n    });\n    return filterSelector\n        ? filter.call(elems, filterSelector, this)\n        : this._make(elems);\n}\nexports.prevUntil = prevUntil;\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nfunction siblings(selector) {\n    var _this = this;\n    // TODO Still get siblings if `parent` is null; see DomUtils' `getSiblings`.\n    var parent = this.parent();\n    var elems = parent\n        .children()\n        .toArray()\n        // TODO: This removes all elements in the selection. Note that they could be added here, if siblings are part of the selection.\n        .filter(function (elem) { return !_this.is(elem); });\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.siblings = siblings;\n/**\n * Gets the children of the first selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nfunction children(selector) {\n    var elems = this.toArray().reduce(function (newElems, elem) {\n        return domhandler_1.hasChildren(elem)\n            ? newElems.concat(elem.children.filter(utils_1.isTag))\n            : newElems;\n    }, []);\n    return selector ? filter.call(elems, selector, this) : this._make(elems);\n}\nexports.children = children;\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nfunction contents() {\n    var elems = this.toArray().reduce(function (newElems, elem) {\n        return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children) : newElems;\n    }, []);\n    return this._make(elems);\n}\nexports.contents = contents;\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nfunction each(fn) {\n    var i = 0;\n    var len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\nexports.each = each;\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nfunction map(fn) {\n    var elems = [];\n    for (var i = 0; i < this.length; i++) {\n        var el = this[i];\n        var val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\nexports.map = map;\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return function (el, i) {\n            return match.call(el, i, el);\n        };\n    }\n    if (utils_1.isCheerio(match)) {\n        return match.is.bind(match);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that selection.\n * When an element is specified, return only that element (if it is contained in\n * the original selection). If using the function method, the function is\n * executed in the context of the selected element, so `this` refers to the\n * current element.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').filter('.orange').attr('class');\n * //=> orange\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nfunction filter(match, container) {\n    if (container === void 0) { container = this; }\n    if (!utils_1.isCheerio(container)) {\n        throw new Error('Not able to create a Cheerio instance.');\n    }\n    var nodes = utils_1.isCheerio(this) ? this.toArray() : this;\n    var elements = nodes.filter(utils_1.isTag);\n    elements =\n        typeof match === 'string'\n            ? select.filter(match, elements, container.options)\n            : elements.filter(getFilterFn(match));\n    return container._make(elements);\n}\nexports.filter = filter;\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nfunction not(match, container) {\n    if (container === void 0) { container = this; }\n    if (!utils_1.isCheerio(container)) {\n        throw new Error('Not able to create a Cheerio instance.');\n    }\n    var nodes = utils_1.isCheerio(this) ? this.toArray() : this;\n    if (typeof match === 'string') {\n        var elements = nodes.filter(utils_1.isTag);\n        var matches_1 = new Set(select.filter(match, elements, container.options));\n        nodes = nodes.filter(function (el) { return !matches_1.has(el); });\n    }\n    else {\n        var filterFn_1 = getFilterFn(match);\n        nodes = nodes.filter(function (el, i) { return !filterFn_1(el, i); });\n    }\n    return container._make(nodes);\n}\nexports.not = not;\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nfunction has(selectorOrHaystack) {\n    var _this = this;\n    return filter.call(this, typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            \":has(\" + selectorOrHaystack + \")\"\n        : function (_, el) { return _this._make(el).find(selectorOrHaystack).length > 0; });\n}\nexports.has = has;\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nfunction first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\nexports.first = first;\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nfunction last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\nexports.last = last;\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nfunction eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexports.eq = eq;\nfunction get(i) {\n    if (i == null) {\n        return Array.prototype.slice.call(this);\n    }\n    return this[i < 0 ? this.length + i : i];\n}\nexports.get = get;\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nfunction index(selectorOrNeedle) {\n    var $haystack;\n    var needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        $haystack = this;\n        needle = utils_1.isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return $haystack.get().indexOf(needle);\n}\nexports.index = index;\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - An position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - An position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nfunction slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\nexports.slice = slice;\nfunction traverseParents(self, elem, selector, limit) {\n    var elems = [];\n    while (elem && elems.length < limit && elem.type !== 'root') {\n        if (!selector || filter.call([elem], selector, self).length) {\n            elems.push(elem);\n        }\n        elem = elem.parent;\n    }\n    return elems;\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nfunction end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\nexports.end = end;\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nfunction add(other, context) {\n    var selection = this._make(other, context);\n    var contents = uniqueSort(tslib_1.__spreadArray(tslib_1.__spreadArray([], this.get()), selection.get()));\n    return this._make(contents);\n}\nexports.add = add;\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nfunction addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\nexports.addBack = addBack;\n"]},"metadata":{},"sourceType":"script"}