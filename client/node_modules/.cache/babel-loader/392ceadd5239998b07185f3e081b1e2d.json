{"ast":null,"code":"var _jsxFileName = \"/home/tyren/projects/updates/Nintendo_Scraper/client/src/components/scraper-table/ScraperTableUI.js\";\nimport React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ScraperLogic from './useScraperLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScraperTable = () => {\n  const {\n    games\n  } = ScraperLogic();\n  return games.length !== 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Date Released\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: games.map((game, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: game.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: game.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: game.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 1\n  }, this) : 'LOADING';\n};\n_c = ScraperTable;\nexport default ScraperTable;\nvar _c;\n$RefreshReg$(_c, \"ScraperTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ScraperLogic","jsxDEV","_jsxDEV","ScraperTable","games","length","component","children","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","align","map","game","index","border","scope","name","date","genre","_c","$RefreshReg$"],"sources":["/home/tyren/projects/updates/Nintendo_Scraper/client/src/components/scraper-table/ScraperTableUI.js"],"sourcesContent":["import React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ScraperLogic from './useScraperLogic';\n\nconst ScraperTable = () => {\n    const {games} = ScraperLogic();\n    return(\n    games.length!== 0 ? (\n<TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name </TableCell>\n            <TableCell align=\"right\">Date Released</TableCell>\n            <TableCell align=\"right\">Genre</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {games.map((game,index) => (\n            <TableRow\n              key={index}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {game.name}\n              </TableCell>\n              <TableCell align=\"right\">{game.date}</TableCell>\n              <TableCell align=\"right\">{game.genre}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer> )\n    : ('LOADING')\n    )\n          }\n\nexport default ScraperTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}